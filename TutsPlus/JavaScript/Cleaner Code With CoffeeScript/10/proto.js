// Generated by CoffeeScript 1.7.1

/*

function Dog (name) {
    this.name = name:
}
Dog.prototype.growl = function() {
    console.log( '*growl*' );
}

r = new Dog('Rusty');

r.growl();
 */

(function() {
  var BorderCollie, Dog, d, rusty,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Dog = function(name) {
    return this.name = name;
  };

  Dog = function(name) {
    return this.name = name;
  };

  d = new Dog("Rusty");

  console.log(d.name);

  Dog = function(name) {
    this.name = name;
  };

  Dog.prototype.growl = function() {
    return console.log('*growl*');
  };

  Dog.prototype.growl = function() {
    return console.log('*growl*');
  };

  __extends(BorderCollie, Dog);

  BorderCollie = function(name, trick) {
    this.name = name;
    this.trick = trick;
  };

  BorderCollie.prototype.perform = function(trick) {
    if (__indexOf.call(this.tricks, trick) >= 0) {
      return console.log("" + this.name + " is " + trick);
    } else {
      return console.log('*whine*');
    }
  };

  rusty = new BorderCollie('Rusty', ['playing dead', 'catching a frisbee', 'rolling over']);

  rusty.perform('playing dead');

  rusty.growl();

}).call(this);
